upstream frontend {
	server parkour2-vite:5173;
}

upstream backend {
	server parkour2-django:8000;
}

server {
	listen 80 default_server;
	return 444;
}

server {
	listen 80;
	listen [::]:80;
	server_name parkour-test.ie-freiburg.mpg.de;
	return 301 https://$server_name$request_uri;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name parkour-test.ie-freiburg.mpg.de;
	ssl_certificate /etc/ssl/cert.pem;
	ssl_certificate_key /etc/ssl/key.pem;
	ssl_session_cache shared:le_nginx_SSL:10m;
	ssl_session_timeout 1440m;
	ssl_session_tickets off;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers off;
	ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
	client_max_body_size 50M;
	client_body_buffer_size 50M;
	client_body_timeout 120;
	client_header_timeout 120;
	keepalive_timeout 120;
	add_header X-Frame-Options SAMEORIGIN always;
	location /static/ {
		alias /parkour2/static/;
	}
	location /protected_media/ {
	    sendfile on;
		sendfile_max_chunk 5m;
		keepalive_timeout 120;
		tcp_nodelay on;
		tcp_nopush on;
		internal;
		alias /parkour2/media/;
	}
	# error_page 500 502 503 504 /500.html;
	# location = /500.html {
	# 	root /path/to/app/current/public;
	# }
	location /vue/ {
		proxy_connect_timeout 120;
		proxy_read_timeout 120;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://frontend;
	}
	location /vue-assets/ {
		proxy_connect_timeout 120;
		proxy_read_timeout 120;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://frontend;
	}
	location / {
		proxy_connect_timeout 120;
		proxy_read_timeout 120;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://backend;
	}
}
