# Generated by Django 1.11.4 on 2018-06-11 13:05

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BarcodeCounter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_id", models.PositiveSmallIntegerField(default=0)),
                ("year", models.PositiveSmallIntegerField(default=2018, unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConcentrationMethod",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
            ],
            options={
                "verbose_name": "Concentration Method",
                "verbose_name_plural": "Concentration Methods",
            },
        ),
        migrations.CreateModel(
            name="IndexI5",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(default="", max_length=10, verbose_name="Number"),
                ),
                (
                    "prefix",
                    models.CharField(default="", max_length=10, verbose_name="Prefix"),
                ),
                ("index", models.CharField(max_length=8, verbose_name="Index")),
            ],
            options={
                "verbose_name": "Index I5",
                "verbose_name_plural": "Indices I5",
            },
        ),
        migrations.CreateModel(
            name="IndexI7",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(default="", max_length=10, verbose_name="Number"),
                ),
                (
                    "prefix",
                    models.CharField(default="", max_length=10, verbose_name="Prefix"),
                ),
                ("index", models.CharField(max_length=8, verbose_name="Index")),
            ],
            options={
                "verbose_name": "Index I7",
                "verbose_name_plural": "Indices I7",
            },
        ),
        migrations.CreateModel(
            name="IndexType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "index_length",
                    models.CharField(
                        choices=[("6", "6"), ("8", "8")],
                        default="8",
                        max_length=1,
                        verbose_name="Index Length",
                    ),
                ),
                (
                    "indices_i5",
                    models.ManyToManyField(
                        blank=True,
                        related_name="index_type",
                        to="library_sample_shared.IndexI5",
                        verbose_name="Indices I5",
                    ),
                ),
                (
                    "indices_i7",
                    models.ManyToManyField(
                        blank=True,
                        related_name="index_type",
                        to="library_sample_shared.IndexI7",
                        verbose_name="Indices I7",
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[("single", "single tube"), ("plate", "plate")],
                        default="single",
                        max_length=11,
                        verbose_name="Format",
                    ),
                ),
                ("is_dual", models.BooleanField(default=False, verbose_name="Is Dual")),
            ],
            options={
                "verbose_name": "Index Type",
                "verbose_name_plural": "Index Types",
            },
        ),
        migrations.CreateModel(
            name="LibraryProtocol",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Name")),
                (
                    "type",
                    models.CharField(
                        choices=[("DNA", "DNA"), ("RNA", "RNA")],
                        default="DNA",
                        max_length=3,
                        verbose_name="Type",
                    ),
                ),
                ("provider", models.CharField(max_length=150, verbose_name="Provider")),
                ("catalog", models.CharField(max_length=150, verbose_name="Catalog")),
                (
                    "explanation",
                    models.CharField(max_length=250, verbose_name="Explanation"),
                ),
                (
                    "input_requirements",
                    models.CharField(max_length=150, verbose_name="Input Requirements"),
                ),
                (
                    "typical_application",
                    models.CharField(
                        max_length=200, verbose_name="Typical Application"
                    ),
                ),
                (
                    "comments",
                    models.TextField(blank=True, null=True, verbose_name="Comments"),
                ),
            ],
            options={
                "verbose_name": "Library Protocol",
                "verbose_name_plural": "Library Protocols",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="LibraryType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                (
                    "library_protocol",
                    models.ManyToManyField(
                        to="library_sample_shared.LibraryProtocol",
                        verbose_name="Library Protocol",
                    ),
                ),
            ],
            options={
                "verbose_name": "Library Type",
                "verbose_name_plural": "Library Types",
            },
        ),
        migrations.CreateModel(
            name="Organism",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "scientific_name",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Scientific Name",
                    ),
                ),
                (
                    "taxon_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Taxon Identifier"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReadLength",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
            ],
            options={
                "verbose_name": "Read Length",
                "verbose_name_plural": "Read Lengths",
            },
        ),
        migrations.CreateModel(
            name="IndexPair",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "index_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_sample_shared.IndexType",
                        verbose_name="Index Type",
                    ),
                ),
                (
                    "index1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_sample_shared.IndexI7",
                        verbose_name="Index 1",
                    ),
                ),
                (
                    "index2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="library_sample_shared.IndexI5",
                        verbose_name="Index 2",
                    ),
                ),
                (
                    "char_coord",
                    models.CharField(
                        max_length=1,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z]$", "Only capital alpha characters are allowed."
                            )
                        ],
                        verbose_name="Character Coordinate",
                    ),
                ),
                (
                    "num_coord",
                    models.PositiveSmallIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Numeric Coordinate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Index Pair",
                "verbose_name_plural": "Index Pairs",
            },
        ),
    ]
